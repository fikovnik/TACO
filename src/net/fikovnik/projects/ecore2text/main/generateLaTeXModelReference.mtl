[comment encoding = UTF-8 /]
[module generateLaTeXModelReference('http://www.eclipse.org/emf/2002/Ecore')/]

[query public annotationDetails(element : EModelElement, source : String, detail : String) : Set(String) = element.eAnnotations->select(a | a.source = source).details->select(d | d.key = detail).value->asSet() /]

[template public documentation(element : EModelElement, prefix : String) { docs : Set(String) = annotationDetails(element, 'http://www.eclipse.org/emf/2002/GenModel', 'documentation'); }]
[if (docs->notEmpty())][prefix/][for (doc : String | docs) separator('\n')][doc/][/for][/if]
[/template]

[template public formatType (feature : EStructuralFeature) ]
% unsupported feature [feature.name/]
[/template]

[template public formatType (feature : EAttribute) ]
[feature.eAttributeType.name/]
[/template]

[template public formatTypeMany(many : EBoolean)]
[if (many)]*[else]1[/if]
[/template]

[template public formatType (feature : EReference) ]
[feature.eReferenceType.name/] ['['/][feature.lowerBound/]..[formatTypeMany(feature.many)/][']'/]
[/template]

[template public createYumlClassDiagram(class : EClass) post (trim()) {
	src_fname : String = 'yuml/'.concat(class.name).concat('.yuml');
	pdf_fname : String = 'figures/'.concat(class.name).concat('.pdf');
}]
[file (src_fname, false, 'UTF-8')]
['['/][class.name/]{bg:lightgray}|[for (attrib : EAttribute | class.eAllAttributes) separator(';')][attrib.name/] : [attrib.eAttributeType.name/][/for][']'/]
[for (superClass : EClass | class.eSuperTypes)]
['['/][superClass.name/][']'/]^['['/][class.name/][']'/]
[/for]
[for (ref : EReference | class.eAllReferences)]
['['/][class.name/][']'/][if (ref.containment)]<>[/if][ref.lowerBound/]-[ref.name/]>[formatTypeMany(ref.many)/]['['/][ref.eReferenceType.name/][']'/]
[/for]
[/file]
% yuml.me :: [pdf_fname/] :: [src_fname/]
\begin{figure}['['/]H[']'/]
\centering
\includegraphics['['/]scale=.7[']'/]{reference/[pdf_fname/]}
\caption{[class.name/] class schema}
\end{figure}
[/template]

[template public generateClassReference(class : EClass)]
\subsubsection{Class: [class.name/]}
\label{sec:class-ref-[class.name/]}

[createYumlClassDiagram(class)/]
[documentation(class, '')/]

[if (class.eAllStructuralFeatures->notEmpty())]
\paragraph*{Attributes}
\begin{center}
\rowcolors{2}{white}{lightgray}
\begin{tabular}{ | l | l | l | p{5cm} |}
\hline
\textbf{Name} & \textbf{Type} & \textbf{Description} \\ \hline
[for (feature : EStructuralFeature | class.eAllStructuralFeatures->sortedBy(name))]
\small \verb+[feature.name/]+ & \small \verb+[feature.formatType()/]+ & \small [documentation(feature,'')/] \\ \hline
[/for]
\end{tabular}
\end{center}
[/if]
[/template]

[template public generatePackageReference(pkg : EPackage)]
\subsection{Package: [pkg.name/]}
\label{sec:pkg-ref-[pkg.name/]}

[documentation(pkg, '')/]

[for (class : EClass | pkg.eClassifiers->select(c | c.oclIsKindOf(EClass))->collect(c | c.oclAsType(EClass)))]
[generateClassReference(class)/]
[/for]
[/template]

[template public generateLaTeXModelReference(rootPackage : EPackage) ? (rootPackage.eSuperPackage->isEmpty())]
[comment @main /]
[file ('model-reference.tex', false, 'UTF-8')]

\section{Model Reference}
\label{sec:model-reference}

\definecolor{lightgray}{RGB}{247,247,247}

[generatePackageReference(rootPackage)/]
[for (pkg : EPackage | rootPackage.eSubpackages)]
[generatePackageReference(pkg)/]
[/for]

[/file]	
[/template]